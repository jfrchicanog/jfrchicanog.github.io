openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /usuarios/{id}:
    get:
      tags:
      - controlador-usuarios
      description: Obtiene un usuario concreto
      operationId: getUsuario
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: El usuario existe
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Usuario'
        "404":
          description: El usuario no existe
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Usuario'
        "403":
          description: Acceso no autorizado
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Usuario'
    put:
      tags:
      - controlador-usuarios
      description: Actualiza un usuario
      operationId: actualizarUsuario
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: El usuario se ha actualizado
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Usuario'
        "404":
          description: El usuario no existe
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Usuario'
        "403":
          description: Acceso no autorizado
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Usuario'
    delete:
      tags:
      - controlador-usuarios
      description: Elimina el usuario.
      operationId: eliminarUsuario
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: El usuario se ha elminado
        "404":
          description: El usuario no existe
        "403":
          description: Acceso no autorizado
  /usuarios:
    get:
      tags:
      - controlador-usuarios
      description: Obtiene la lista de usuarios del sistema
      operationId: obtenerUsuarios_1
      responses:
        "200":
          description: Devuelve la lista de usuarios
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
        "403":
          description: Acceso no autorizado
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
    post:
      tags:
      - controlador-usuarios
      description: Crea un nuevo usuario en el sistema
      operationId: obtenerUsuarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioNuevo'
        required: true
      responses:
        "201":
          description: El usuario se crea correctamente
          headers:
            Location:
              description: URI del nuevo recurso
              style: simple
              schema:
                type: string
        "409":
          description: Hay un usuario con el mismo correo electrónico en el sistema
        "403":
          description: Acceso no autorizado
  /passwordreset:
    post:
      tags:
      - controlador-usuarios
      description: "Pide al servicio que se genere una nueva contraseña para un usuario.\
        \ El servicio debe enviar un e-mail a través del servicio de notificaciones\
        \ con la nueva contraseña para el uusario. Si el usuario no existe, la respuesta\
        \ debe ser la misma que cuando existe, para no dar información acerca de la\
        \ existencia del usuario en el sistema."
      operationId: passwordReset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      responses:
        "200":
          description: Si el usuario existe cambia contraseña y envía notificación.
            En caso contrario no hace nada.
      security:
      - public: []
  /login:
    post:
      tags:
      - controlador-usuarios
      description: Comprueba las credenciales del usuario y devuelve un JWT si todo
        fue correcto.
      operationId: passwordReset_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        "200":
          description: Devuelve un JWT para el usuario si las credenciales son correctas.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RespuestaJWT'
        "403":
          description: Creedenciales no correctas.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RespuestaJWT'
      security:
      - public: []
components:
  schemas:
    Usuario:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nombre:
          type: string
        apellido1:
          type: string
        apellido2:
          type: string
        email:
          type: string
    UsuarioNuevo:
      type: object
      properties:
        nombre:
          type: string
        apellido1:
          type: string
        apellido2:
          type: string
        email:
          type: string
    PasswordReset:
      type: object
      properties:
        email:
          type: string
    Login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    RespuestaJWT:
      type: object
      properties:
        jwt:
          type: string
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
