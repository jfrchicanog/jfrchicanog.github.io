openapi: 3.0.0
info:
  title: Microservicios del Proyecto de Gestión de Productos (miniPIM)
  description: 'API para la gestión de usuarios, cuentas y planes, productos y activos.'
  version: 1.0.0
servers:
  - url: 'https://api.example.com'
    description: Servidor principal
tags:
  - name: Usuarios
    description: Gestión de usuarios y autenticación
  - name: Cuentas
    description: Gestión de cuentas y planes
  - name: Productos
    description: Gestión de productos y sus categorías
  - name: Activos
    description: Gestión de activos y sus categorías
paths:
  /login:
    post:
      tags:
        - Usuarios
      summary: Iniciar sesión
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Token JWT generado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Credenciales no válidas o faltantes

  /forgottenpassword:
    post:
      tags:
        - Usuarios
      summary: Solicitar restablecimiento de contraseña
      operationId: forgotPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Token de restablecimiento enviado al correo electrónico
  /passwordreset:
    post:
      tags:
        - Usuarios
      summary: Restablecer contraseña
      operationId: resetPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Contraseña actualizada correctamente
        '401':
          description: El token usado no es válido
  /usuario:
    get:
      tags:
        - Usuarios
      summary: Listar usuarios
      operationId: listUsers
      responses:
        '200':
          description: Lista de usuarios obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Credenciales no válidas o faltantes
        '403':
          description: Sin permisos suficientes
      parameters:
        - schema:
            type: string
          in: query
          name: email
          description: Permite buscar usuarios por correo electrónico
        - schema:
            type: integer
          in: query
          name: id
          description: Permite buscar usuarios por su identificador
    post:
      summary: Añadir usuario
      tags:
        - Usuarios
      operationId: addUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'  
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Credenciales no válidas o faltantes
        '403':
          description: Sin permisos suficientes        
      
  '/usuario/{idUsuario}':
    delete:
      summary: Eliminar usuario
      tags:
        - Usuarios
      operationId: removeUser
      parameters:
        - schema:
            type: integer
          name: idUsuario
          in: path
          required: true
          description: Identificador del usuario
      responses:
        '200':
          description: Usuario eliminado
        '401':
          description: Credenciales no válidas o faltantes
        '403':
          description: Sin permisos suficientes
    
    put:
      summary: Actualizar usuario
      tags:
        - Usuarios
      operationId: put-usuario-idUsuario
      parameters:
        - schema:
            type: integer
          name: idUsuario
          in: path
          required: true
          description: Identificador del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuario actualizado
        '401':
          description: Credenciales no válidas o faltantes
        '403':
          description: Sin permisos suficientes

  /cuenta:
    get:
      tags:
        - Cuentas
      summary: >
        Consulta cuentas. 
        Puede obtenerlas todas (solo si es administrador quien hace la consulta),
        la que tiene el idCuenta indicado en el parámetro de consulta
        (solo si es administrador o es un usuario asociado a la cuenta),
        las que pertenecen al usuario con identificador idUsuario,
        las que tienen el nombre indicando en el parámetro de consulta (solo para administradores),
        y las que tienen asociadas un plan concreto (solo administradores).
        Si no se indica ningún parámetro de consulta y no es un administrador, se devuelve solo las
        cuentas a las que tiene acceso como usuario (equivalente a hacer idUsuario=miusuario).
      parameters:
        - schema:
            type: integer
          name: idCuenta
          in: query
          description: Identificador de la cuenta.
        - schema:
            type: integer
          name: idUsuario
          in: query
          description: Identificador del usuario.
        - schema:
            type: integer
          name: nombre
          in: query
          description: Nombre de la cuenta.
        - schema:
            type: integer
          name: idPlan
          in: query
          description: Identificador del plan.

      responses:
        '200':
          description: Devuelve la lista de cuentas solicitada
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cuenta'
        '401':
          description: Credenciales no válidas o faltantes
        '403':
          description: Sin permisos suficientes
    post:
      tags:
        - Cuentas
      summary: >
        Añade una cuenta nueva (solo para administradores). 
        El plan no tiene que estar completo, basta con que aparezca
        el ID del plan en el objeto.
        Al crearse la cuenta se asocia el usuario que la crea como propietario y usuario.
        Esta operación solo la puede hacer un administrador.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cuenta'  
      responses:
        '201':
          description: Se crea la cuenta correspondiente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cuenta'
        '401':
          description: Credenciales no válidas o faltantes
        '403':
          description: Sin permisos suficientes

  /cuenta/{idCuenta}:
    put:
      tags:
        - Cuentas
      summary: >
        Modifica una cuenta (solo para administradores). 
        El plan no tiene que estar completo, basta con que aparezca
        el ID del plan en el objeto. Esto permite actualizar el plan asociado a una cuenta.
        Esta operació solo la puede hacer un administrador.
      parameters:
        - schema:
            type: integer
          name: idCuenta
          in: path
          required: true
          description: Identificador de la cuenta
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cuenta'      
      responses:
        '200':
          description: Actualiza la cuenta correctamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cuenta'
        '401':
          description: Credenciales no válidas o faltantes
        '403':
          description: Sin permisos suficientes
    delete:
      tags:
        - Cuentas
      summary: >
        Elimina una cuenta. 
        Para poder eliminarla no puede tener tener productos, relaciones, actios o categorías.
        Conocer esto implica llamar a los endpoints de los otros microservicios.
        Esta operación solo la puede hacer un administrador.
      parameters:
        - schema:
            type: integer
          name: idCuenta
          in: path
          required: true
          description: Identificador de la cuenta
      responses:
        '200':
          description: Se elimina la cuenta correctamente.
        '401':
          description: Credenciales no válidas o faltantes
        '403':
          description: >
            Sin permisos suficientes o con algún recurso asociado 
            (producto, activo, categoría de producto o activo, o relación).

  /cuenta/{idCuenta}/propietario:
    get:
      tags:
        - Cuentas
      summary: >
        Devuelve información del propietario de una cuenta. 
        Este microservicio solo guarda el ID, debe consultar
        el microservicio de gestión de usuarios para obtener el resto de información.
        Solo lo pueden consultar personas con acceso a la cuenta (administrador y usuarios 
        asociados a la cuenta).
      parameters:
        - schema:
            type: integer
          name: idCuenta
          in: path
          required: true
          description: Identificador de la cuenta
      responses:
        '200':
          description: Devuelve el ID, email y nombre completo del propietario de la cuenta.
          content:
            applicaion/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                    format: email
                  nombre:
                    type: string
                  apellido1:
                    type: string
                  apellido2:
                    type: string
        '401':
          description: Credenciales no válidas o faltantes.
        '403':
          description: Sin permisos suficientes.
                  
    post:
      tags:
        - Cuentas
      summary: >
        Actualiza el propietario de una cuenta. 
        Solo hay que indicar el ID o el e-mail del nuevo propietario.
        Se debe comprobar que el usuario existe.
        Si el propietario no es un usuario, se añade también como usuario.
        Esta operación solo puede realizarla un administrador.
      parameters:
        - schema:
            type: integer
          name: idCuenta
          in: path
          required: true
          description: Identificador de la cuenta
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id: 
                  type: integer
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: El propietario de la cuenta queda acualizado. Devuelve el nuevo propietario.
          content:
            applicaion/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                    format: email
                  nombre:
                    type: string
                  apellido1:
                    type: string
                  apellido2:
                    type: string
        '401':
          description: Credenciales no válidas o faltantes.
        '403':
          description: >
            Sin permisos suficientes. 
            También puede dar este código si el usuario que va a ser propietario no existe.

  /cuenta/{idCuenta}/usuarios:
    get:
      tags:
        - Cuentas
      summary: >
        Devuelve la lista de usuarios de una cuenta. 
        Este microservicio solo guarda los IDs de los usuarios, se debe consultar
        el microservicio de gestión de usuarios para obtener el resto de información.
        Solo lo pueden consultar el administrador y el propietario de la cuenta.
      parameters:
        - schema:
            type: integer
          name: idCuenta
          in: path
          required: true
          description: Identificador de la cuenta
      responses:
        '200':
          description: Devuelve un array con el ID, email y nombre completo de los usuarios de la cuenta.
          content:
            applicaion/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    email:
                      type: string
                      format: email
                    nombre:
                      type: string
                    apellido1:
                      type: string
                    apellido2:
                      type: string
        '401':
          description: Credenciales no válidas o faltantes.
        '403':
          description: Sin permisos suficientes.
                  
    post:
      tags:
        - Cuentas
      summary: >
        Actualiza el listado de usuarios de una cuenta. 
        Solo hay que indicar el ID o el e-mail de cada uno de los usuarios (cualquier de ellos).
        El propietario siempre tiene que ser un usuario, no puede eliminarse usando este método.
        Esta operación la puede realizar un administrador y el propietario de la cuenta.
      parameters:
        - schema:
            type: integer
          name: idCuenta
          in: path
          required: true
          description: Identificador de la cuenta
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                    format: email
      responses:
        '200':
          description: Los usuarios de la cuenta se actualizan y se devuelven.
          content:
            applicaion/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    email:
                      type: string
                      format: email
                    nombre:
                      type: string
                    apellido1:
                      type: string
                    apellido2:
                      type: string
        '401':
          description: Credenciales no válidas o faltantes.
        '403':
          description: >
            Sin permisos suficientes. 
            También puede dar este código si el ID o e-mail de algunos de los usuarios
            indicados como entrada no existen.


  /plan:
    get:
      tags:
        - Cuentas
      summary: >
        Lista todos los planes disponibles (si no se le indica parámetro alguno),
        el plan indicado (si se usa idPlan como parámetro) o los planes con el nombre
        especificado. Todos los usuarios tienen acceso a este método.
      operationId: listPlans
      parameters:
        - schema:
            type: integer
          name: idPlan
          in: query
          description: Identificador del plan.
        - schema:
            type: string
          name: nombre
          in: query
          description: Nombre del plan.
      responses:
        '200':
          description: Lista de planes obtenida correctamente, en función de los filtros aplicados.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plan'
        '401':
          description: Credenciales no válidas o faltantes.

    post:
      tags:
        - Cuentas
      summary: >
        Este método permite crear un nuevo plan. Solo un administrador puede hacerlo.
      operationId: createPlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plan'
      responses:
        '201':
          description: Plan creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
        '401':
          description: Credenciales no válidas o faltantes.
        '403':
          description: Sin permisos suficientes. 

  /plan({idPlan}:    
    put:
      tags:
        - Cuentas
      summary: >
        Permite actualizar la información de un plan. Solo los administradores puede hacerlo.
      operationId: updatePlan
      parameters:
        - schema:
            type: integer
          name: idPlan
          in: path
          required: true
          description: Identificador del plan.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plan'
      responses:
        '200':
          description: Plan actualizado correctamente.
        '401':
          description: Credenciales no válidas o faltantes.
        '403':
          description: Sin permisos suficientes. 

    delete:
      tags:
        - Activos
      summary: >
        Permite eliminar un plan. Solo un administrador puede hacerlo.
        Para poder eliminar un plan no puede haber ninguna cuenta asociada a un plan.
      operationId: deletePlan
      parameters:
        - schema:
            type: integer
          name: idPlan
          in: path
          required: true
          description: Identificador del plan.
      responses:
        '200':
          description: Plan eliminado correctamente.
        '401':
          description: Credenciales no válidas o faltantes.
        '403':
          description: >
            Sin permisos suficientes. 
            Este código de salida también se puede obtener si existen cuentas con el plan
            que se intenta eliminar.

  /activo:
    get:
      tags:
        - Activos
      summary: Listar activos
      operationId: listAssets
      responses:
        '200':
          description: Lista de activos obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activo'
    post:
      tags:
        - Activos
      summary: Crear un activo
      operationId: createAsset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activo'
      responses:
        '201':
          description: Activo creado exitosamente
    put:
      tags:
        - Activos
      summary: Actualizar un activo
      operationId: updateAsset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activo'
      responses:
        '200':
          description: Activo actualizado exitosamente
    delete:
      tags:
        - Activos
      summary: Eliminar un activo
      operationId: deleteAsset
      responses:
        '200':
          description: Activo eliminado correctamente

#####################
  /producto:
    get:
      summary: Obtener productos
      description: |
        Uno de los parámetros debe estar presente. 
        En el caso de `idProducto` o `idCategoria`, deben pertenecer a una cuenta donde el usuario tenga acceso.
      parameters:
        - name: idProducto
          in: query
          schema:
            type: string
        - name: idCuenta
          in: query
          schema:
            type: string
        - name: idCategoria
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Lista de productos obtenida correctamente

    post:
      summary: Crear un producto
      description: |
        Usuarios con acceso a la cuenta pueden crear productos.
        El producto incluye las categorías y también las relaciones.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idCuenta:
                  type: string
      responses:
        "201":
          description: Producto creado correctamente

  /producto/{idProducto}:
    put:
      summary: Modificar un producto
      description: Se pueden modificar las categorías y las relaciones.
      parameters:
        - name: idProducto
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Producto actualizado correctamente
    
    delete:
      summary: Eliminar un producto
      parameters:
        - name: idProducto
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Producto eliminado correctamente

  /categoria-producto:
    get:
      summary: Obtener categorías de productos
      parameters:
        - name: idCategoria
          in: query
          schema:
            type: string
        - name: idCuenta
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Categorías obtenidas correctamente

    post:
      summary: Crear una categoría de producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idCuenta:
                  type: string
      responses:
        "201":
          description: Categoría creada correctamente

  /categoria-producto/{idCategoria}:
    put:
      summary: Modificar una categoría de producto
      parameters:
        - name: idCategoria
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Categoría actualizada correctamente

    delete:
      summary: Eliminar una categoría de producto
      description: Solo si no se usa.
      parameters:
        - name: idCategoria
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Categoría eliminada correctamente

  /relacion:
    get:
      summary: Obtener relaciones
      parameters:
        - name: idRelacion
          in: query
          schema:
            type: string
        - name: nombre
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Relaciones obtenidas correctamente

    post:
      summary: Crear una relación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idCuenta:
                  type: string
      responses:
        "201":
          description: Relación creada correctamente

  /relacion/{idRelacion}:
    put:
      summary: Modificar una relación
      parameters:
        - name: idRelacion
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Relación actualizada correctamente

    delete:
      summary: Eliminar una relación
      description: Solo si no se usa entre ninguna pareja de productos.
      parameters:
        - name: idRelacion
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Relación eliminada correctamente



#####################


components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
          format: email
        nombre:
          type: string
        apellido1:
          type: string
        apellido2:
          type: string
        role:
          type: string
          enum:
            - CLIENTE
            - ADMINISTRADOR
    Cuenta:
      type: object
      properties:
        id:
          type: integer
        nombre:
          type: string
        direccion:
          type: string
        nif:
          type: string
        fechaAlta:
          type: date
        plan:
          $ref: '#/components/schemas/Plan'
    Plan:
      type: object
      properties:
        id:
          type: integer
        nombre:
          type: string
        maxProductos:
          type: integer
        maxActivos:
          type: integer
        maxAlmacenamiento:
          type: integer
        maxCategoriasProductos:
          type: integer
        maxCategoriasActivos:
          type: integer
        maxRelaciones:
          type: integer
        precio:
          type: number
    Producto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        category:
          type: string
    Activo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        url:
          type: string
  securitySchemes: {}
