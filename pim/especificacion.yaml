openapi: 3.0.0
info:
  title: Microservicios de Gestión
  description: 'API para la gestión de usuarios, cuentas, planes, productos y activos.'
  version: 1.0.0
servers:
  - url: 'https://api.example.com'
    description: Servidor principal
tags:
  - name: Usuarios
    description: Gestión de usuarios y autenticación
  - name: Cuentas
    description: Gestión de cuentas y planes
  - name: Productos
    description: Gestión de productos y sus categorías
  - name: Activos
    description: Gestión de activos y sus categorías
paths:
  /login:
    post:
      tags:
        - Usuarios
      summary: Iniciar sesión
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Token JWT generado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Credenciales no válidas o faltantes

  /forgottenpassword:
    post:
      tags:
        - Usuarios
      summary: Solicitar restablecimiento de contraseña
      operationId: forgotPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Token de restablecimiento enviado al correo electrónico
  /passwordreset:
    post:
      tags:
        - Usuarios
      summary: Restablecer contraseña
      operationId: resetPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Contraseña actualizada correctamente
        '401':
          description: El token usado no es válido
  /usuario:
    get:
      tags:
        - Usuarios
      summary: Listar usuarios
      operationId: listUsers
      responses:
        '200':
          description: Lista de usuarios obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Credenciales no válidas o faltantes
        '403':
          description: Sin permisos suficientes
      parameters:
        - schema:
            type: string
          in: query
          name: email
          description: Permite buscar usuarios por correo electrónico
        - schema:
            type: integer
          in: query
          name: id
          description: Permite buscar usuarios por su identificador
    post:
      summary: Añadir usuario
      tags:
        - Usuarios
      operationId: addUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'  
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Credenciales no válidas o faltantes
        '403':
          description: Sin permisos suficientes        
      
  '/usuario/{idUsuario}':
    delete:
      summary: Eliminar usuario
      tags:
        - Usuarios
      operationId: removeUser
      parameters:
        - schema:
            type: integer
          name: idUsuario
          in: path
          required: true
          description: Identificador del usuario
      responses:
        '200':
          description: Usuario eliminado
        '401':
          description: Credenciales no válidas o faltantes
        '403':
          description: Sin permisos suficientes
    
    put:
      summary: Actualizar usuario
      tags:
        - Usuarios
      operationId: put-usuario-idUsuario
      parameters:
        - schema:
            type: integer
          name: idUsuario
          in: path
          required: true
          description: Identificador del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuario actualizado
        '401':
          description: Credenciales no válidas o faltantes
        '403':
          description: Sin permisos suficientes
      
  /plans:
    get:
      tags:
        - Cuentas
      summary: Listar planes
      operationId: listPlans
      responses:
        '200':
          description: Lista de planes obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plan'
    post:
      tags:
        - Cuentas
      summary: Crear un plan
      operationId: createPlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plan'
      responses:
        '201':
          description: Plan creado exitosamente
    put:
      tags:
        - Cuentas
      summary: Actualizar un plan
      operationId: updatePlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plan'
      responses:
        '200':
          description: Plan actualizado exitosamente
    delete:
      tags:
        - Activos
      summary: Eliminar un plan
      operationId: deletePlan
      responses:
        '200':
          description: Plan eliminado correctamente
  /assets:
    get:
      tags:
        - Activos
      summary: Listar activos
      operationId: listAssets
      responses:
        '200':
          description: Lista de activos obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Asset'
    post:
      tags:
        - Activos
      summary: Crear un activo
      operationId: createAsset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
      responses:
        '201':
          description: Activo creado exitosamente
    put:
      tags:
        - Activos
      summary: Actualizar un activo
      operationId: updateAsset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
      responses:
        '200':
          description: Activo actualizado exitosamente
    delete:
      tags:
        - Activos
      summary: Eliminar un activo
      operationId: deleteAsset
      responses:
        '200':
          description: Activo eliminado correctamente
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        nombre:
          type: string
        apellido1:
          type: string
        apellido2:
          type: string
        role:
          type: string
          enum:
            - CLIENTE
            - ADMINISTRADOR
    Account:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        plan:
          $ref: '#/components/schemas/Plan'
    Plan:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        maxProducts:
          type: integer
        maxAssets:
          type: integer
        maxStorage:
          type: integer
    Product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        category:
          type: string
    Asset:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        url:
          type: string
  securitySchemes: {}
